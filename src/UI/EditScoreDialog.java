/*
 * EditScoreDialog.java
 *
 * Created on 23 novembre 2008, 21:25
 */

package UI;

import artificialcomposer.*;
import javax.sound.midi.InvalidMidiDataException;
import javax.sound.midi.MidiUnavailableException;
import javax.swing.JOptionPane;

/**
 *
 * @author  William
 */
public class EditScoreDialog extends javax.swing.JDialog {

    private MusicScore score;
    private mainFrame frm;
    
    public EditScoreDialog(java.awt.Frame parent, boolean modal, MusicScore score) {
        super(parent, modal);
        this.score = score;
        this.frm = (mainFrame)parent;
        if (this.score.getNotes() == null) {
            // On est en mode nouvelle partoche...
            // A implémenter.
            this.dispose();
        }
        initComponents();
        fillNoteList();
        for (int x = 0; x < Note.NAMES.length; x++) {
            this.jComboBoxNote.addItem(Note.NAMES[x]);
        }
        if (score.getTempo() > 0) {
            this.jTextFieldTempo.setText(Integer.toString(score.getTempo()));
        } else {
            this.jTextFieldTempo.setText("120");
        }
    }
    
    public void fillNoteList() {
        String[] theList = new String[score.getNotes().size()];
        for (int x = 0; x < theList.length; x++) {
            theList[x] = score.getNotes().get(x).toScoreString();
        }
        this.jListNotes.setListData(theList);
        this.jButtonSaveChange.setEnabled(false);
    }
    
    public void showNote(Note note) {
        this.jComboBoxNote.setSelectedIndex(note.getNote());
        this.jSpinnerDuration.getModel().setValue(note.getNoteValue());
        this.jSpinnerOctave.getModel().setValue(note.getOctave());
        this.jButtonSaveChange.setEnabled(true);
        this.jButtonDeleteNote.setEnabled(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jListNotes = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jButtonClose = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldTempo = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jButtonSaveTempo = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jButtonDeleteNote = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxNote = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jSpinnerOctave = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jSpinnerDuration = new javax.swing.JSpinner();
        jButtonSaveChange = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jButtonNewNoteAfter = new javax.swing.JButton();
        jButtonNewNoteStart = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jButtonPlay = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editeur de partition pas très très visuel");

        jScrollPane1.setPreferredSize(new java.awt.Dimension(280, 152));

        jListNotes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListNotes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jListNotesMouseReleased(evt);
            }
        });
        jListNotes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jListNotesKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jListNotes);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.WEST);

        jButtonClose.setText("Fermer");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonClose);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout(0, 20));

        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 3));

        jLabel4.setText("Tempo : ");
        jPanel4.add(jLabel4);

        jTextFieldTempo.setPreferredSize(new java.awt.Dimension(80, 20));
        jPanel4.add(jTextFieldTempo);

        jPanel6.add(jPanel4, java.awt.BorderLayout.CENTER);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        jButtonSaveTempo.setText("Enregistrer tempo");
        jButtonSaveTempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveTempoActionPerformed(evt);
            }
        });
        jPanel9.add(jButtonSaveTempo);

        jPanel6.add(jPanel9, java.awt.BorderLayout.SOUTH);

        jPanel5.add(jPanel6, java.awt.BorderLayout.CENTER);
        jPanel5.add(jSeparator1, java.awt.BorderLayout.SOUTH);

        jPanel3.add(jPanel5, java.awt.BorderLayout.NORTH);

        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel8.setLayout(new java.awt.GridLayout(2, 0));
        jPanel8.add(jSeparator2);

        jButtonDeleteNote.setText("Supprimer note sélectionnée");
        jButtonDeleteNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteNoteActionPerformed(evt);
            }
        });
        jPanel8.add(jButtonDeleteNote);

        jPanel7.add(jPanel8, java.awt.BorderLayout.NORTH);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Note : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jLabel1, gridBagConstraints);

        jComboBoxNote.setPreferredSize(new java.awt.Dimension(80, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 5);
        jPanel1.add(jComboBoxNote, gridBagConstraints);

        jLabel2.setText("Octave : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jLabel2, gridBagConstraints);

        jSpinnerOctave.setModel(new javax.swing.SpinnerNumberModel(5, 1, 9, 1));
        jSpinnerOctave.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 5);
        jPanel1.add(jSpinnerOctave, gridBagConstraints);

        jLabel3.setText("Durée (ticks) : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jLabel3, gridBagConstraints);

        jSpinnerDuration.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(16), Integer.valueOf(4), null, Integer.valueOf(4)));
        jSpinnerDuration.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 5);
        jPanel1.add(jSpinnerDuration, gridBagConstraints);

        jButtonSaveChange.setText("Enregistrer les changements");
        jButtonSaveChange.setEnabled(false);
        jButtonSaveChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveChangeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jButtonSaveChange, gridBagConstraints);

        jPanel7.add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel10.setLayout(new java.awt.GridLayout(4, 0));

        jButtonNewNoteAfter.setText("Nouvelle note après sélection");
        jButtonNewNoteAfter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewNoteAfterActionPerformed(evt);
            }
        });
        jPanel10.add(jButtonNewNoteAfter);

        jButtonNewNoteStart.setText("Nouvelle note au début");
        jButtonNewNoteStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewNoteStartActionPerformed(evt);
            }
        });
        jPanel10.add(jButtonNewNoteStart);
        jPanel10.add(jSeparator3);

        jButtonPlay.setText("Jouer");
        jButtonPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlayActionPerformed(evt);
            }
        });
        jPanel10.add(jButtonPlay);

        jPanel7.add(jPanel10, java.awt.BorderLayout.SOUTH);

        jPanel3.add(jPanel7, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
    this.dispose();
}//GEN-LAST:event_jButtonCloseActionPerformed

private void jButtonSaveTempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveTempoActionPerformed
    try {
        int tempo = Integer.parseInt(this.jTextFieldTempo.getText());
        if (tempo > 0) {
            score.updateTempo(tempo);
        } else {
            JOptionPane.showMessageDialog(this, "Erreur dans la lecture du tempo. Veuillez l'écrire correctement (entier, noires par minutes).", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Erreur dans la lecture du tempo. Veuillez l'écrire correctement (entier, noires par minutes).", "Erreur", JOptionPane.ERROR_MESSAGE);
    }
}//GEN-LAST:event_jButtonSaveTempoActionPerformed

private void jButtonDeleteNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteNoteActionPerformed
    if (!this.jListNotes.isSelectionEmpty()) {
        score.removeNote(this.jListNotes.getSelectedIndex());
        fillNoteList();
        this.jButtonDeleteNote.setEnabled(false);
    }
}//GEN-LAST:event_jButtonDeleteNoteActionPerformed

private void jListNotesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListNotesMouseReleased
    if (!this.jListNotes.isSelectionEmpty()) {
        showNote(score.getNotes().get(this.jListNotes.getSelectedIndex()));
    }
}//GEN-LAST:event_jListNotesMouseReleased

private void jListNotesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jListNotesKeyReleased
    this.jListNotesMouseReleased(null);
}//GEN-LAST:event_jListNotesKeyReleased

private void jButtonSaveChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveChangeActionPerformed
    // Cas de modification de note...
    if (!this.jListNotes.isSelectionEmpty()) {
        Note note = new Note(this.jComboBoxNote.getSelectedIndex(), (Integer)this.jSpinnerOctave.getModel().getValue());
        note.setNoteValue((Integer)this.jSpinnerDuration.getModel().getValue());
        score.updateNote(note, this.jListNotes.getSelectedIndex());
    }
    this.fillNoteList();
}//GEN-LAST:event_jButtonSaveChangeActionPerformed

private void jButtonNewNoteStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewNoteStartActionPerformed
    Note note = new Note((String)this.jComboBoxNote.getSelectedItem(), (Integer)this.jSpinnerOctave.getModel().getValue());
    note.setNoteValue((Integer)this.jSpinnerDuration.getModel().getValue());
    score.newNote(note, 0);
    this.fillNoteList();    // Vide la sélection en même temps.
}//GEN-LAST:event_jButtonNewNoteStartActionPerformed

private void jButtonNewNoteAfterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewNoteAfterActionPerformed
    if (!this.jListNotes.isSelectionEmpty()) {
        int index = this.jListNotes.getSelectedIndex() + 1;
        Note note = new Note((String)this.jComboBoxNote.getSelectedItem(), (Integer)this.jSpinnerOctave.getModel().getValue());
        note.setNoteValue((Integer)this.jSpinnerDuration.getModel().getValue());
        score.newNote(note, index);
        this.fillNoteList();    // Vide la sélection en même temps.
    } else {
        JOptionPane.showMessageDialog(this, "Vous devez sélectionner une note avant d'invoquer cette fonction.", "Attention", JOptionPane.WARNING_MESSAGE);
    }
}//GEN-LAST:event_jButtonNewNoteAfterActionPerformed

private void jButtonPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlayActionPerformed
    if (this.score != null && this.score.getNotes() != null && this.score.getNotes().size() > 0) {
        try {
                ScorePlayer MidiPlay = new ScorePlayer(score, frm.getInstrument());
                MidiPlay.start();
            } catch (InvalidMidiDataException ex) {
                JOptionPane.showMessageDialog(this, "Erreur due au système Midi : donnée (note) incorrecte.", "Attention", JOptionPane.WARNING_MESSAGE);
            } catch (MidiUnavailableException ex) {
                JOptionPane.showMessageDialog(this, "Erreur due au système Midi. Séquenceur indisponible. Contactez l'auteur du programme...", "Attention", JOptionPane.WARNING_MESSAGE);
            }
    }
}//GEN-LAST:event_jButtonPlayActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonDeleteNote;
    private javax.swing.JButton jButtonNewNoteAfter;
    private javax.swing.JButton jButtonNewNoteStart;
    private javax.swing.JButton jButtonPlay;
    private javax.swing.JButton jButtonSaveChange;
    private javax.swing.JButton jButtonSaveTempo;
    private javax.swing.JComboBox jComboBoxNote;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jListNotes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSpinner jSpinnerDuration;
    private javax.swing.JSpinner jSpinnerOctave;
    private javax.swing.JTextField jTextFieldTempo;
    // End of variables declaration//GEN-END:variables

}
